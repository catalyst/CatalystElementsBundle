{"schema_version":"1.0.0","elements":[{"description":"`<catalyst-flip-button>` is a wrapper for a `<select>` element.\nIt displays as a button and flips between different options.\n\n    <catalyst-flip-button>\n      <select>\n        <option>Apples</option>\n        <option>Banana</option>\n        <option>Carrot</option>\n        <option>Duck</option>\n      </select>\n    </catalyst-flip-button>\n\n### Focus\nTo focus a catalyst-flip-button, you can call the native `focus()` method as long as the\nelement has a tab index. Similarly, `blur()` will blur the element.\n\n### Styling\n\nThe following css custom properties are available for this element:\n\nProperty | Description | Default Value\n-------- |------------ | -------------\n`--catalyst-flip-button-card-face-appearance`      | The appearance of the card face.            | `button`\n`--catalyst-flip-button-card-face-background`      | The background of the card face.            | `#dddddd`\n`--catalyst-flip-button-card-face-border`          | The border applied to the card face.        |\n`--catalyst-flip-button-card-face-border-radius`   | The border radius applied to the card face. |\n`--catalyst-flip-button-card-face-focused-outline` | The outline of the card face when focused.  |","summary":"","path":"dist/catalyst-elements.js","properties":[{"name":"_cardElement","type":"HTMLElement","description":"The element that flips.","privacy":"protected","sourceRange":{"start":{"line":125,"column":4},"end":{"line":125,"column":21}},"metadata":{"polymer":{"readOnly":false}},"defaultValue":"this.shadowRoot.querySelector('#card')"},{"name":"_cardFrontFace","type":"HTMLElement","description":"The front face of the card.","privacy":"protected","sourceRange":{"start":{"line":132,"column":4},"end":{"line":132,"column":23}},"metadata":{"polymer":{"readOnly":false}},"defaultValue":"this._cardElement.querySelector('#front')"},{"name":"_cardBackFace","type":"HTMLElement","description":"The back face of the card.","privacy":"protected","sourceRange":{"start":{"line":139,"column":4},"end":{"line":139,"column":22}},"metadata":{"polymer":{"readOnly":false}},"defaultValue":"this._cardElement.querySelector('#back')"},{"name":"_flipped","type":"boolean","description":"True if the card has been flipped, otherwise false.","privacy":"protected","sourceRange":{"start":{"line":146,"column":4},"end":{"line":146,"column":17}},"metadata":{"polymer":{"readOnly":false}},"defaultValue":"false"},{"name":"_rotation","type":"number","description":"The rotation of the card.","privacy":"protected","sourceRange":{"start":{"line":153,"column":4},"end":{"line":153,"column":18}},"metadata":{"polymer":{"readOnly":false}},"defaultValue":"0"},{"name":"disabled","type":"boolean","description":"States whether or not this element is disabled.","privacy":"public","sourceRange":{"start":{"line":433,"column":2},"end":{"line":435,"column":3}},"metadata":{"polymer":{"readOnly":false}}},{"name":"noAutoPerspective","type":"boolean","description":"States whether or not this element should automatically calculate its own perspective value.","privacy":"public","sourceRange":{"start":{"line":459,"column":2},"end":{"line":461,"column":3}},"metadata":{"polymer":{"readOnly":false}}},{"name":"selectElement","type":"HTMLSelectElement","description":"The select element.","privacy":"public","sourceRange":{"start":{"line":468,"column":2},"end":{"line":470,"column":3}},"metadata":{"polymer":{"readOnly":true}}}],"methods":[{"name":"connectedCallback","description":"Fires when the element is inserted into the DOM.","privacy":"protected","sourceRange":{"start":{"line":161,"column":2},"end":{"line":206,"column":3}},"metadata":{},"params":[],"return":{"type":"void"}},{"name":"_upgradeProperty","description":"Upgrade the property on this element with the given name.\n\nA user may set a property on an _instance_ of an element before its prototype has been connected to this class.\nThis method will check for any instance properties and run them through the proper class setters.\n\nSee the [lazy properties](/web/fundamentals/architecture/building-components/best-practices#lazy-properties) section for more details.","privacy":"protected","sourceRange":{"start":{"line":219,"column":2},"end":{"line":231,"column":3}},"metadata":{},"params":[{"name":"prop","type":"string","description":"The name of a property."}],"return":{"type":"void"}},{"name":"_setUpSelectElement","description":"Find the new form element and set it up.","privacy":"protected","sourceRange":{"start":{"line":236,"column":2},"end":{"line":279,"column":3}},"metadata":{},"params":[],"return":{"type":"void"}},{"name":"_setUpDimensions","description":"Set the dimensions of this element.\n\nThis element cannot obtain it's dimensions automatically from it's children\nas they are positioned absolutely. This method will manually calculate the\nminimum size this component should be to contain its children.","privacy":"protected","sourceRange":{"start":{"line":288,"column":2},"end":{"line":384,"column":3}},"metadata":{},"params":[],"return":{"type":"void"}},{"name":"disconnectedCallback","description":"Fires when the element is removed from the DOM.","privacy":"protected","sourceRange":{"start":{"line":391,"column":2},"end":{"line":407,"column":3}},"metadata":{},"params":[],"return":{"type":"void"}},{"name":"attributeChangedCallback","description":"Fired when any of the attributes in the `observedAttributes` array change.","privacy":"protected","sourceRange":{"start":{"line":484,"column":2},"end":{"line":513,"column":3}},"metadata":{},"params":[{"name":"name","type":"string","description":"The name of the attribute that changed."},{"name":"oldValue","type":"*","description":"The original value of the attribute that changed."},{"name":"newValue","type":"*","description":"The new value of the attribute that changed."}],"return":{"type":"void"}},{"name":"_onKeyDown","description":"Called when a key is pressed on this element.","privacy":"protected","sourceRange":{"start":{"line":520,"column":2},"end":{"line":546,"column":3}},"metadata":{},"params":[{"name":"event","type":"KeyboardEvent"}],"return":{"type":"void"}},{"name":"_onClick","description":"Called when this element is clicked.","privacy":"protected","sourceRange":{"start":{"line":553,"column":2},"end":{"line":557,"column":3}},"metadata":{},"params":[{"name":"event","type":"MouseEvent"}],"return":{"type":"void"}},{"name":"_onMouseUp","description":"Called on the mouse up event.","privacy":"protected","sourceRange":{"start":{"line":564,"column":2},"end":{"line":568,"column":3}},"metadata":{},"params":[{"name":"event","type":"MouseEvent"}],"return":{"type":"void"}},{"name":"_onLeftClick","description":"Called when this element is left clicked.","privacy":"protected","sourceRange":{"start":{"line":573,"column":2},"end":{"line":576,"column":3}},"metadata":{},"params":[],"return":{"type":"void"}},{"name":"_onRightClick","description":"Called when this element is right clicked.","privacy":"protected","sourceRange":{"start":{"line":581,"column":2},"end":{"line":584,"column":3}},"metadata":{},"params":[],"return":{"type":"void"}},{"name":"notifySelectedOptionChanged","description":"Notify this component that the select element has changed.\n\nMust be called after manually setting the selected index.","privacy":"public","sourceRange":{"start":{"line":591,"column":2},"end":{"line":612,"column":3}},"metadata":{},"params":[],"return":{"type":"void"}},{"name":"_onLightDomMutation","description":"Called when a top level lightDom mutation happens.","privacy":"protected","sourceRange":{"start":{"line":619,"column":2},"end":{"line":654,"column":3}},"metadata":{},"params":[{"name":"mutations"}],"return":{"type":"void"}},{"name":"_onOptionsMutation","description":"Called when a top level lightDom mutation happens.","privacy":"protected","sourceRange":{"start":{"line":661,"column":2},"end":{"line":701,"column":3}},"metadata":{},"params":[{"name":"mutations"}],"return":{"type":"void"}},{"name":"next","description":"Flip the button forwards to the next option.","privacy":"public","sourceRange":{"start":{"line":706,"column":2},"end":{"line":708,"column":3}},"metadata":{},"params":[],"return":{"type":"void"}},{"name":"previous","description":"Flip the button back to the previous option.","privacy":"public","sourceRange":{"start":{"line":713,"column":2},"end":{"line":715,"column":3}},"metadata":{},"params":[],"return":{"type":"void"}},{"name":"_flip","description":"Flip the button.\n\nThis method is only caused by a user action, so it will dispatch a change event.","privacy":"protected","sourceRange":{"start":{"line":727,"column":2},"end":{"line":745,"column":3}},"metadata":{},"params":[{"name":"forwards","defaultValue":"true"}],"return":{"type":"void"}},{"name":"_update","description":"Update the element","privacy":"protected","sourceRange":{"start":{"line":750,"column":2},"end":{"line":760,"column":3}},"metadata":{},"params":[],"return":{"type":"void"}},{"name":"_generateGuid","description":"Generate a guid (or at least something that seems like one)","privacy":"protected","sourceRange":{"start":{"line":767,"column":2},"end":{"line":772,"column":3}},"metadata":{},"params":[]}],"staticMethods":[],"demos":[{"url":"scripts/@catalyst-elements/bundle/../catalyst-flip-button/demo/basic.html","description":"Basic"},{"url":"scripts/@catalyst-elements/bundle/../catalyst-flip-button/demo/styled.html","description":"Styled"},{"url":"scripts/@catalyst-elements/bundle/../catalyst-flip-button/demo/form.html","description":"Form"}],"metadata":{},"sourceRange":{"start":{"line":39,"column":0},"end":{"line":773,"column":1}},"privacy":"public","superclass":"HTMLElement","name":"CatalystFlipButton","attributes":[{"name":"disabled","description":"","sourceRange":{"start":{"line":104,"column":12},"end":{"line":104,"column":22}},"metadata":{}}],"events":[],"styling":{"cssVariables":[],"selectors":[]},"slots":[],"tagname":"catalyst-flip-button"},{"description":"`<catalyst-toggle-button>` is a toggle button web component.\n\n    <catalyst-toggle-button>Button</catalyst-toggle-button>\n\nIt may include optional form control setting for use in a form.\n\n    <catalyst-toggle-button name=\"form-element-name\" value=\"value\">Button</catalyst-toggle-button>\n\n### Focus\nTo focus a catalyst-toggle-button, you can call the native `focus()` method as long as the\nelement has a tab index. Similarly, `blur()` will blur the element.\n\n### Styling\n\nStyle this element using native css properties; there are no custom properties available for this component.","summary":"","path":"dist/catalyst-elements.js","properties":[{"name":"_inputElement","type":"HTMLElement","description":"The element that will be submitting as part of a form to represent this component.","privacy":"protected","sourceRange":{"start":{"line":102,"column":4},"end":{"line":102,"column":22}},"metadata":{"polymer":{"readOnly":false}},"defaultValue":"document.createElement('input')"},{"name":"checked","type":"boolean","description":"States whether or not this element is checked.","privacy":"public","sourceRange":{"start":{"line":232,"column":2},"end":{"line":234,"column":3}},"metadata":{"polymer":{"readOnly":false}}},{"name":"pressed","type":"boolean","description":"States whether or not this element is pressed.","privacy":"public","sourceRange":{"start":{"line":257,"column":2},"end":{"line":259,"column":3}},"metadata":{"polymer":{"readOnly":false}}},{"name":"disabled","type":"boolean","description":"States whether or not this element is disabled.","privacy":"public","sourceRange":{"start":{"line":283,"column":2},"end":{"line":285,"column":3}},"metadata":{"polymer":{"readOnly":false}}},{"name":"required","type":"boolean","description":"States whether or not this element is required.","privacy":"public","sourceRange":{"start":{"line":309,"column":2},"end":{"line":311,"column":3}},"metadata":{"polymer":{"readOnly":false}}},{"name":"name","type":"string","description":"The name of this element. Used for forms.","privacy":"public","sourceRange":{"start":{"line":328,"column":2},"end":{"line":334,"column":3}},"metadata":{"polymer":{"readOnly":false}}},{"name":"form","type":"HTMLFormElement","description":"The form this element is apart of.","privacy":"public","sourceRange":{"start":{"line":341,"column":2},"end":{"line":343,"column":3}},"metadata":{"polymer":{"readOnly":true}}},{"name":"value","type":"string","description":"The value this element has. Used for forms.","privacy":"public","sourceRange":{"start":{"line":360,"column":2},"end":{"line":366,"column":3}},"metadata":{"polymer":{"readOnly":false}}},{"name":"inputElement","type":"HTMLInputElement","description":"The input element.","privacy":"public","sourceRange":{"start":{"line":373,"column":2},"end":{"line":375,"column":3}},"metadata":{"polymer":{"readOnly":true}}}],"methods":[{"name":"connectedCallback","description":"Fires when the element is inserted into the DOM.","privacy":"protected","sourceRange":{"start":{"line":113,"column":2},"end":{"line":147,"column":3}},"metadata":{},"params":[],"return":{"type":"void"}},{"name":"_upgradeProperty","description":"Upgrade the property on this element with the given name.\n\nA user may set a property on an _instance_ of an element before its prototype has been connected to this class.\nThis method will check for any instance properties and run them through the proper class setters.\n\nSee the [lazy properties](/web/fundamentals/architecture/building-components/best-practices#lazy-properties) section for more details.","privacy":"protected","sourceRange":{"start":{"line":160,"column":2},"end":{"line":168,"column":3}},"metadata":{},"params":[{"name":"prop","type":"string","description":"The name of a property."}],"return":{"type":"void"}},{"name":"setUpLabels","description":"Updated the labels for this element.","privacy":"public","sourceRange":{"start":{"line":173,"column":2},"end":{"line":199,"column":3}},"metadata":{},"params":[],"return":{"type":"void"}},{"name":"disconnectedCallback","description":"Fires when the element is removed from the DOM.","privacy":"protected","sourceRange":{"start":{"line":206,"column":2},"end":{"line":209,"column":3}},"metadata":{},"params":[],"return":{"type":"void"}},{"name":"attributeChangedCallback","description":"Fired when any of the attributes in the `observedAttributes` array change.","privacy":"protected","sourceRange":{"start":{"line":388,"column":2},"end":{"line":458,"column":3}},"metadata":{},"params":[{"name":"name","type":"string","description":"The name of the attribute that changed."},{"name":"oldValue","type":"*","description":"The original value of the attribute that changed."},{"name":"newValue","type":"*","description":"The new value of the attribute that changed."}],"return":{"type":"void"}},{"name":"_onKeyDown","description":"Called when a key is pressed on this element.","privacy":"protected","sourceRange":{"start":{"line":465,"column":2},"end":{"line":483,"column":3}},"metadata":{},"params":[{"name":"event","type":"KeyboardEvent"}],"return":{"type":"void"}},{"name":"_onClick","description":"Called when this element is clicked.","privacy":"protected","sourceRange":{"start":{"line":488,"column":2},"end":{"line":490,"column":3}},"metadata":{},"params":[],"return":{"type":"void"}},{"name":"_onLabelClick","description":"Called when a label of this element is clicked.","privacy":"protected","sourceRange":{"start":{"line":495,"column":2},"end":{"line":497,"column":3}},"metadata":{},"params":[],"return":{"type":"void"}},{"name":"_toggleChecked","description":"`_toggleChecked()` calls the either the `checked` or `pressed` setter and flips its state.\nBecause `_toggleChecked()` is only caused by a user action, it will\nalso dispatch a change event.","privacy":"protected","sourceRange":{"start":{"line":506,"column":2},"end":{"line":534,"column":3}},"metadata":{},"params":[],"return":{"type":"void"}},{"name":"_generateGuid","description":"Generate a guid (or at least something that seems like one)","privacy":"protected","sourceRange":{"start":{"line":541,"column":2},"end":{"line":546,"column":3}},"metadata":{},"params":[]}],"staticMethods":[],"demos":[{"url":"scripts/@catalyst-elements/bundle/../catalyst-toggle-button/demo/basic.html","description":"Basic"}],"metadata":{},"sourceRange":{"start":{"line":25,"column":0},"end":{"line":547,"column":1}},"privacy":"public","superclass":"HTMLElement","name":"CatalystToggleButton","attributes":[{"name":"checked","description":"","sourceRange":{"start":{"line":79,"column":12},"end":{"line":79,"column":21}},"metadata":{}},{"name":"pressed","description":"","sourceRange":{"start":{"line":79,"column":23},"end":{"line":79,"column":32}},"metadata":{}},{"name":"disabled","description":"","sourceRange":{"start":{"line":79,"column":34},"end":{"line":79,"column":44}},"metadata":{}},{"name":"required","description":"","sourceRange":{"start":{"line":79,"column":46},"end":{"line":79,"column":56}},"metadata":{}},{"name":"name","description":"","sourceRange":{"start":{"line":79,"column":58},"end":{"line":79,"column":64}},"metadata":{}},{"name":"value","description":"","sourceRange":{"start":{"line":79,"column":66},"end":{"line":79,"column":73}},"metadata":{}},{"name":"form","description":"","sourceRange":{"start":{"line":79,"column":75},"end":{"line":79,"column":81}},"metadata":{}}],"events":[{"type":"CustomEvent","name":"change","description":"Fired when the component's `pressed` value changes due to user interaction.","metadata":{}}],"styling":{"cssVariables":[],"selectors":[]},"slots":[],"tagname":"catalyst-toggle-button"},{"description":"`<catalyst-toggle-switch>` is a toggle switch web component.\n\n    <catalyst-toggle-switch></catalyst-toggle-switch>\n\nIt may include optional form control setting for use in a form.\n\n    <catalyst-toggle-switch name=\"form-element-name\" value=\"value\"></catalyst-toggle-switch>\n\n### Focus\nTo focus a catalyst-toggle-switch, you can call the native `focus()` method as long as the\nelement has a tab index. Similarly, `blur()` will blur the element.\n\n### Styling\n\nThe following css custom properties are available for this element:\n\nProperty | Description | Default Value\n-------- |------------ | -------------\n`--catalyst-toggle-switch-bar-color`       | The color of the bar.                      | `#ced4da`\n`--catalyst-toggle-switch-knob-color`      | The color of the knob.                     | `#ffffff`\n`--catalyst-toggle-switch-bar-width`       | The width of the bar.                      | `44px`\n`--catalyst-toggle-switch-bar-height`      | The height of the bar.                     | `16px`\n`--catalyst-toggle-switch-knob-size`       | The size of the knob (width and height).   | `26px`\n`--catalyst-toggle-switch-knob-offset`     | The offset applied to the knob's location. | `5px`\n`--catalyst-toggle-switch-bar-border`      | The bar's border.                          | `none`\n`--catalyst-toggle-switch-knob-border`     | The knob's border.                         | `none`\n`--catalyst-toggle-switch-knob-box-shadow` | The box shadow applied to the knob.        | _Too Long..._","summary":"","path":"dist/catalyst-elements.js","properties":[{"name":"_bar","type":"HTMLElement","description":"The bar.","privacy":"protected","sourceRange":{"start":{"line":84,"column":4},"end":{"line":84,"column":13}},"metadata":{"polymer":{"readOnly":false}},"defaultValue":"this.shadowRoot.querySelector('#bar')"},{"name":"_knob","type":"HTMLElement","description":"The knob.","privacy":"protected","sourceRange":{"start":{"line":91,"column":4},"end":{"line":91,"column":14}},"metadata":{"polymer":{"readOnly":false}},"defaultValue":"this._bar.querySelector('#knob')"}],"methods":[{"name":"connectedCallback","description":"Fires when the element is inserted into the DOM.","privacy":"protected","sourceRange":{"start":{"line":99,"column":2},"end":{"line":109,"column":3}},"metadata":{},"params":[],"return":{"type":"void"}},{"name":"styleUpdated","description":"Should be called after changing the element's style.","privacy":"public","sourceRange":{"start":{"line":114,"column":2},"end":{"line":124,"column":3}},"metadata":{},"params":[],"return":{"type":"void"}}],"staticMethods":[],"demos":[{"url":"scripts/@catalyst-elements/bundle/../catalyst-toggle-switch/demo/basic.html","description":"Basic"},{"url":"scripts/@catalyst-elements/bundle/../catalyst-toggle-switch/demo/styled.html","description":"Styled"}],"metadata":{},"sourceRange":{"start":{"line":41,"column":0},"end":{"line":125,"column":1}},"privacy":"public","superclass":"HTMLElement","name":"CatalystToggleSwitch","attributes":[],"events":[],"styling":{"cssVariables":[],"selectors":[]},"slots":[],"tagname":"catalyst-toggle-switch"}]}