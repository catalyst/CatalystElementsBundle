{"schema_version":"1.0.0","namespaces":[{"name":"CatalystElements","description":"Namespace for all the Catalyst Elements.","summary":"","sourceRange":{"file":"dist/catalyst-flip-button.js","start":{"line":6,"column":2},"end":{"line":6,"column":58}},"elements":[{"description":"`<catalyst-flip-button>` is a wrapper for a `<select>` element.\nIt displays as a button and flips between different options.\n\n    <catalyst-flip-button>\n      <select>\n        <option>Apples</option>\n        <option>Banana</option>\n        <option>Carrot</option>\n        <option>Duck</option>\n      </select>\n    </catalyst-flip-button>\n\n### Focus\nTo focus a catalyst-flip-button, you can call the native `focus()` method as long as the\nelement has a tab index. Similarly, `blur()` will blur the element.\n\n### Styling\n\nThe following css custom properties are available for this element:\n\nProperty | Description | Default Value\n-------- |------------ | -------------\n--catalyst-flip-button-card-face-appearance | The appearance of the card face. | `button`\n--catalyst-flip-button-card-face-background | The background of the card face. | `#dddddd`\n--catalyst-flip-button-card-face-border | The border applied to the card face. |\n--catalyst-flip-button-card-face-border-radius | The border radius applied to the card face. |\n--catalyst-flip-button-card-face-focused-outline | The outline of the card face when focused. |","summary":"","path":"dist/catalyst-flip-button.js","properties":[{"name":"_cardElement","type":"HTMLElement","description":"The element that flips.","privacy":"protected","sourceRange":{"start":{"line":128,"column":8},"end":{"line":128,"column":25}},"metadata":{"polymer":{"readOnly":false}},"defaultValue":"this.shadowRoot.querySelector('#card')"},{"name":"_cardFrontFace","type":"HTMLElement","description":"The front face of the card.","privacy":"protected","sourceRange":{"start":{"line":134,"column":8},"end":{"line":134,"column":27}},"metadata":{"polymer":{"readOnly":false}},"defaultValue":"this._cardElement.querySelector('#front')"},{"name":"_cardBackFace","type":"HTMLElement","description":"The back face of the card.","privacy":"protected","sourceRange":{"start":{"line":140,"column":8},"end":{"line":140,"column":26}},"metadata":{"polymer":{"readOnly":false}},"defaultValue":"this._cardElement.querySelector('#back')"},{"name":"_flipped","type":"boolean","description":"True if the card has been flipped, otherwise false.","privacy":"protected","sourceRange":{"start":{"line":146,"column":8},"end":{"line":146,"column":21}},"metadata":{"polymer":{"readOnly":false}},"defaultValue":"false"},{"name":"_rotation","type":"number","description":"The rotation of the card.","privacy":"protected","sourceRange":{"start":{"line":152,"column":8},"end":{"line":152,"column":22}},"metadata":{"polymer":{"readOnly":false}},"defaultValue":"0"},{"name":"disabled","type":"boolean","description":"States whether or not this element is disabled.","privacy":"public","sourceRange":{"start":{"line":389,"column":6},"end":{"line":391,"column":7}},"metadata":{"polymer":{"readOnly":false}}},{"name":"noAutoPerspective","type":"boolean","description":"States whether or not this element should automatically calculate its own perspective value.","privacy":"public","sourceRange":{"start":{"line":412,"column":6},"end":{"line":414,"column":7}},"metadata":{"polymer":{"readOnly":false}}},{"name":"selectElement","type":"HTMLSelectElement","description":"The select element.","privacy":"public","sourceRange":{"start":{"line":420,"column":6},"end":{"line":422,"column":7}},"metadata":{"polymer":{"readOnly":true}}}],"methods":[{"name":"connectedCallback","description":"Fires when the element is inserted into the DOM.","privacy":"protected","sourceRange":{"start":{"line":159,"column":6},"end":{"line":194,"column":7}},"metadata":{},"params":[]},{"name":"_upgradeProperty","description":"Upgrade the property on this element with the given name.\n\nA user may set a property on an _instance_ of an element before its prototype has been connected to this class.\nThis method will check for any instance properties and run them through the proper class setters.\n\nSee the [lazy properties](/web/fundamentals/architecture/building-components/best-practices#lazy-properties) section for more details.","privacy":"protected","sourceRange":{"start":{"line":206,"column":6},"end":{"line":217,"column":7}},"metadata":{},"params":[{"name":"prop","type":"string","description":"The name of a property."}]},{"name":"_setUpSelectElement","description":"Find the new form element and set it up.","privacy":"protected","sourceRange":{"start":{"line":221,"column":6},"end":{"line":259,"column":7}},"metadata":{},"params":[]},{"name":"_setUpDimensions","description":"Set the dimensions of this element.\n\nThis element cannot obtain it's dimensions automatically from it's children\nas they are positioned absolutely. This method will manually calculate the\nminimum size this component should be to contain its children.","privacy":"protected","sourceRange":{"start":{"line":267,"column":6},"end":{"line":347,"column":7}},"metadata":{},"params":[]},{"name":"disconnectedCallback","description":"Fires when the element is removed from the DOM.","privacy":"protected","sourceRange":{"start":{"line":353,"column":6},"end":{"line":366,"column":7}},"metadata":{},"params":[]},{"name":"attributeChangedCallback","description":"Fired when any of the attributes in the `observedAttributes` array change.","privacy":"protected","sourceRange":{"start":{"line":435,"column":6},"end":{"line":458,"column":7}},"metadata":{},"params":[{"name":"name","type":"string","description":"The name of the attribute that changed."},{"name":"oldValue","type":"*","description":"The original value of the attribute that changed."},{"name":"newValue","type":"*","description":"The new value of the attribute that changed."}]},{"name":"_onKeyDown","description":"Called when a key is pressed on this element.","privacy":"protected","sourceRange":{"start":{"line":464,"column":6},"end":{"line":490,"column":7}},"metadata":{},"params":[{"name":"event","type":"KeyboardEvent"}]},{"name":"_onClick","description":"Called when this element is clicked.","privacy":"protected","sourceRange":{"start":{"line":496,"column":6},"end":{"line":500,"column":7}},"metadata":{},"params":[{"name":"event","type":"MouseEvent"}]},{"name":"_onMouseUp","description":"Called on the mouse up event.","privacy":"protected","sourceRange":{"start":{"line":506,"column":6},"end":{"line":510,"column":7}},"metadata":{},"params":[{"name":"event","type":"MouseEvent"}]},{"name":"_onLeftClick","description":"Called when this element is left clicked.","privacy":"protected","sourceRange":{"start":{"line":514,"column":6},"end":{"line":517,"column":7}},"metadata":{},"params":[]},{"name":"_onRightClick","description":"Called when this element is right clicked.","privacy":"protected","sourceRange":{"start":{"line":521,"column":6},"end":{"line":524,"column":7}},"metadata":{},"params":[]},{"name":"notifySelectedOptionChanged","description":"Notify this component that the select element has changed.\n\nMust be called after manually setting the selected index.","privacy":"public","sourceRange":{"start":{"line":530,"column":6},"end":{"line":547,"column":7}},"metadata":{},"params":[]},{"name":"_onLightDomMutation","description":"Called when a top level lightDom mutation happens.","privacy":"protected","sourceRange":{"start":{"line":553,"column":6},"end":{"line":582,"column":7}},"metadata":{},"params":[{"name":"mutations"}]},{"name":"_onOptionsMutation","description":"Called when a top level lightDom mutation happens.","privacy":"protected","sourceRange":{"start":{"line":588,"column":6},"end":{"line":621,"column":7}},"metadata":{},"params":[{"name":"mutations"}]},{"name":"next","description":"Flip the button forwards to the next option.","privacy":"public","sourceRange":{"start":{"line":625,"column":6},"end":{"line":627,"column":7}},"metadata":{},"params":[]},{"name":"previous","description":"Flip the button back to the previous option.","privacy":"public","sourceRange":{"start":{"line":631,"column":6},"end":{"line":633,"column":7}},"metadata":{},"params":[]},{"name":"_flip","description":"Flip the button.\n\nThis method is only caused by a user action, so it will dispatch a change event.","privacy":"protected","sourceRange":{"start":{"line":644,"column":6},"end":{"line":670,"column":7}},"metadata":{},"params":[{"name":"forwards","defaultValue":"true"}]},{"name":"_update","description":"Update the element","privacy":"protected","sourceRange":{"start":{"line":674,"column":6},"end":{"line":682,"column":7}},"metadata":{},"params":[]},{"name":"_generateGuid","description":"Generate a guid (or at least something that seems like one)","privacy":"protected","sourceRange":{"start":{"line":688,"column":6},"end":{"line":693,"column":7}},"metadata":{},"params":[]}],"staticMethods":[{"name":"register","description":"Register this class as an element.","privacy":"public","sourceRange":{"start":{"line":109,"column":6},"end":{"line":111,"column":7}},"metadata":{},"params":[]}],"demos":[{"url":"demo/demo.es5.html","description":"ES5 Component Demo"},{"url":"demo/demo.es6.html","description":"ES6 Component Demo"}],"metadata":{},"sourceRange":{"start":{"line":65,"column":4},"end":{"line":694,"column":5}},"privacy":"public","superclass":"HTMLElement","name":"CatalystElements.CatalystFlipButton","attributes":[{"name":"disabled","description":"","sourceRange":{"start":{"line":104,"column":16},"end":{"line":104,"column":26}},"metadata":{}}],"events":[{"type":"CustomEvent","name":"change","description":"Fired when the selected option changes due to user interaction.","metadata":{}}],"styling":{"cssVariables":[],"selectors":[]},"slots":[],"tagname":"catalyst-flip-button"}]}]}